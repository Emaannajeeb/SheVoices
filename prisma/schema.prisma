generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  name      String
  role      String   @default("admin")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  blogPosts BlogPost[]
}

model BlogPost {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  slug        String   @unique
  content     String
  excerpt     String
  author      String
  authorId    String   @db.ObjectId
  published   Boolean  @default(false)
  featuredImage String?
  tags        String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  user User @relation(fields: [authorId], references: [id])
}

model PodcastVideo {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  videoUrl    String
  thumbnailUrl String?
  duration    Int?     // in seconds
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model GalleryImage {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  imageUrl    String
  altText     String?
  category    String   @default("general")
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ContactInfo {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  email       String
  phone       String?
  whatsappNumber String?
  address     String?
  socialLinks Json?    // {instagram: "", facebook: "", twitter: ""}
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ContactMessage {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String
  message     String
  subject     String?
  status      String   @default("unread") // "unread", "read", "replied", "archived"
  isRead      Boolean  @default(false)
  adminNotes  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model SocialUpdate {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  platform    String   // "instagram" | "facebook"
  postId      String   @unique
  content     String
  imageUrl    String?
  postUrl     String
  publishedAt DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
